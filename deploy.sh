#!/bin/bash

# Script de despliegue para GestionGranito App
# Este script verifica que todo est√© listo para el despliegue y luego despliega la aplicaci√≥n

echo "üöÄ Iniciando verificaci√≥n de despliegue para GestionGranito App..."

# Verificar que Node.js est√° instalado
if ! command -v node &> /dev/null; then
    echo "‚ùå Node.js no est√° instalado. Por favor, inst√°lalo antes de continuar."
    exit 1
fi

# Verificar que npm est√° instalado
if ! command -v npm &> /dev/null; then
    echo "‚ùå npm no est√° instalado. Por favor, inst√°lalo antes de continuar."
    exit 1
fi

# Verificar que el archivo .env.local existe
if [ ! -f .env.local ]; then
    echo "‚ö†Ô∏è No se encontr√≥ el archivo .env.local"
    echo "Creando archivo .env.local a partir de .env.example..."
    cp .env.example .env.local
    echo "‚ö†Ô∏è Por favor, edita el archivo .env.local con tus credenciales antes de continuar."
    exit 1
fi

# Verificar variables de entorno requeridas
echo "üìã Verificando variables de entorno..."
REQUIRED_VARS=("NEXT_PUBLIC_SHOPIFY_SHOP_DOMAIN" "SHOPIFY_ACCESS_TOKEN" "NEXTAUTH_SECRET" "ADMIN_EMAIL" "ADMIN_PASSWORD" "SHOPIFY_API_URL" "NEXTAUTH_URL")
MISSING_VARS=()

for VAR in "${REQUIRED_VARS[@]}"; do
    if ! grep -q "^$VAR=" .env.local; then
        MISSING_VARS+=("$VAR")
    fi
done

if [ ${#MISSING_VARS[@]} -gt 0 ]; then
    echo "‚ùå Faltan las siguientes variables de entorno en .env.local:"
    for VAR in "${MISSING_VARS[@]}"; do
        echo "   - $VAR"
    done
    echo "Por favor, a√±ade estas variables a tu archivo .env.local antes de continuar."
    exit 1
fi

echo "‚úÖ Variables de entorno verificadas correctamente."

# Instalar dependencias
echo "üì¶ Instalando dependencias..."
npm install

# Verificar si la instalaci√≥n fue exitosa
if [ $? -ne 0 ]; then
    echo "‚ùå Error durante la instalaci√≥n de dependencias. Por favor, revisa los errores y vuelve a intentarlo."
    exit 1
fi

echo "‚úÖ Dependencias instaladas correctamente."

# Construir la aplicaci√≥n
echo "üî® Construyendo la aplicaci√≥n..."
npm run build

# Verificar si la construcci√≥n fue exitosa
if [ $? -ne 0 ]; then
    echo "‚ùå Error durante la construcci√≥n. Por favor, revisa los errores y vuelve a intentarlo."
    exit 1
fi

echo "‚úÖ Construcci√≥n exitosa."

# Preguntar si se desea iniciar la aplicaci√≥n
read -p "¬øDeseas iniciar la aplicaci√≥n ahora? (s/n): " START_APP

if [[ $START_APP == "s" || $START_APP == "S" ]]; then
    echo "üöÄ Iniciando la aplicaci√≥n..."
    npm start
else
    echo "‚úÖ Todo est√° listo para el despliegue."
    echo "Para iniciar la aplicaci√≥n, ejecuta: npm start"
fi
